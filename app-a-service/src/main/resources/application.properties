spring.application.name=app-a-service
server.port=8080

# actuators
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health
management.health.circuitbreakers.enabled=true

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update


spring.h2.console.enabled=true


#oauth2 configs
spring.security.oauth2.client.registration.github.client-id=Iv23liyWNM7mH9L0Iued
spring.security.oauth2.client.registration.github.client-secret=f1f18a31623f6226bfb0b68f0da94c5dc7946e83

#spring.security.oauth2.client.registration.google.client-id=777631685	703-93rsgaecsc1sgf74oq245f8p12udoaip.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.github.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

#Resilience

resilience4j.retry.instances.productBRetry.maxRetryAttempts=3
resilience4j.retry.instances.productBRetry.waitDuration=5s

resilience4j.ratelimiter.instances.productBRateLimiter.limitRefreshPeriod=5s
resilience4j.ratelimiter.instances.productBRateLimiter.limitForPeriod=1
resilience4j.ratelimiter.instances.productBRateLimiter.timeoutDuration=3s

resilience4j.circuitbreaker.instances.productBCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.productBCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.productBCircuitBreaker.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.productBCircuitBreaker.minimumNumberOfCalls=10
resilience4j.circuitbreaker.instances.productBCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.productBCircuitBreaker.waitDurationInOpenState=1s
resilience4j.circuitbreaker.instances.productBCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.productBCircuitBreaker.eventConsumerBufferSize=10

# Flyway configurations
#this property specifies the locations where Flyway should look for the migration scripts. By default, Flyway will look for them in the classpath:db/migration directory, but you can specify a different location if needed.
spring.flyway.locations=classpath:db/migration

#Flyway will automatically create the baseline for your database when you run the migration. This is useful if you are starting from scratch and don't have any existing database.
spring.flyway.baseline-on-migrate=true
spring.flyway.sql-migration-prefix=V
spring.flyway.repeatable-sql-migration-prefix=R
spring.flyway.validate-on-migrate=true


#custom
productB.timeOutInSeconds=3

